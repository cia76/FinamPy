"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import FinamPy.FinamPy.grpc.trade_pb2
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import google.type.decimal_pb2
import google.type.interval_pb2
import google.type.money_pb2
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class GetAccountRequest(google.protobuf.message.Message):
    """Запрос получения информации по конкретному аккаунту"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ACCOUNT_ID_FIELD_NUMBER: builtins.int
    account_id: builtins.str
    """Идентификатор аккаунта"""
    def __init__(
        self,
        *,
        account_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["account_id", b"account_id"]) -> None: ...

global___GetAccountRequest = GetAccountRequest

@typing.final
class GetAccountResponse(google.protobuf.message.Message):
    """Информация о конкретном аккаунте"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ACCOUNT_ID_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    EQUITY_FIELD_NUMBER: builtins.int
    UNREALIZED_PROFIT_FIELD_NUMBER: builtins.int
    POSITIONS_FIELD_NUMBER: builtins.int
    CASH_FIELD_NUMBER: builtins.int
    PORTFOLIO_MC_FIELD_NUMBER: builtins.int
    PORTFOLIO_MCT_FIELD_NUMBER: builtins.int
    PORTFOLIO_FORTS_FIELD_NUMBER: builtins.int
    account_id: builtins.str
    """Идентификатор аккаунта"""
    type: builtins.str
    """Тип аккаунта"""
    status: builtins.str
    """Статус аккаунта"""
    @property
    def equity(self) -> google.type.decimal_pb2.Decimal:
        """Доступные средства плюс стоимость открытых позиций"""

    @property
    def unrealized_profit(self) -> google.type.decimal_pb2.Decimal:
        """Нереализованная прибыль"""

    @property
    def positions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Position]:
        """Позиции. Открытые, плюс теоретические (по неисполненным активным заявкам)"""

    @property
    def cash(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.type.money_pb2.Money]:
        """Сумма собственных денежных средств на счете, доступная для торговли. Не включает маржинальные средства."""

    @property
    def portfolio_mc(self) -> global___MC:
        """Общий тип для счетов Московской Биржи. Включает в себя как единые, так и моно счета."""

    @property
    def portfolio_mct(self) -> global___MCT:
        """Тип портфеля для счетов на американских рынках."""

    @property
    def portfolio_forts(self) -> global___FORTS:
        """Тип портфеля для торговли на срочном рынке Московской Биржи."""

    def __init__(
        self,
        *,
        account_id: builtins.str = ...,
        type: builtins.str = ...,
        status: builtins.str = ...,
        equity: google.type.decimal_pb2.Decimal | None = ...,
        unrealized_profit: google.type.decimal_pb2.Decimal | None = ...,
        positions: collections.abc.Iterable[global___Position] | None = ...,
        cash: collections.abc.Iterable[google.type.money_pb2.Money] | None = ...,
        portfolio_mc: global___MC | None = ...,
        portfolio_mct: global___MCT | None = ...,
        portfolio_forts: global___FORTS | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["equity", b"equity", "portfolio", b"portfolio", "portfolio_forts", b"portfolio_forts", "portfolio_mc", b"portfolio_mc", "portfolio_mct", b"portfolio_mct", "unrealized_profit", b"unrealized_profit"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["account_id", b"account_id", "cash", b"cash", "equity", b"equity", "portfolio", b"portfolio", "portfolio_forts", b"portfolio_forts", "portfolio_mc", b"portfolio_mc", "portfolio_mct", b"portfolio_mct", "positions", b"positions", "status", b"status", "type", b"type", "unrealized_profit", b"unrealized_profit"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["portfolio", b"portfolio"]) -> typing.Literal["portfolio_mc", "portfolio_mct", "portfolio_forts"] | None: ...

global___GetAccountResponse = GetAccountResponse

@typing.final
class MC(google.protobuf.message.Message):
    """Общий тип для счетов Московской Биржи. Включает в себя как единые, так и специализированные (моно) счета для разных секций биржи.
    Единый торговый счет (ЕТС): Позволяет торговать на нескольких рынках (фондовый, валютный. срочный, spb, иностранные бумаги, иностранные фьючерсы) с единой денежной позиции.
    Моно-счет фондового рынка MOEX: Изолированный счет для торговли акциями, облигациями и паями.
    Моно-счет валютного рынка MOEX: Изолированный счет для операций с валютными парами (например, CNYRUB_TOM).
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    AVAILABLE_CASH_FIELD_NUMBER: builtins.int
    INITIAL_MARGIN_FIELD_NUMBER: builtins.int
    MAINTENANCE_MARGIN_FIELD_NUMBER: builtins.int
    @property
    def available_cash(self) -> google.type.decimal_pb2.Decimal:
        """Сумма собственных денежных средств на счете, доступная для торговли. Включает маржинальные средства."""

    @property
    def initial_margin(self) -> google.type.decimal_pb2.Decimal:
        """Начальная маржа"""

    @property
    def maintenance_margin(self) -> google.type.decimal_pb2.Decimal:
        """Минимальная маржа"""

    def __init__(
        self,
        *,
        available_cash: google.type.decimal_pb2.Decimal | None = ...,
        initial_margin: google.type.decimal_pb2.Decimal | None = ...,
        maintenance_margin: google.type.decimal_pb2.Decimal | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["available_cash", b"available_cash", "initial_margin", b"initial_margin", "maintenance_margin", b"maintenance_margin"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["available_cash", b"available_cash", "initial_margin", b"initial_margin", "maintenance_margin", b"maintenance_margin"]) -> None: ...

global___MC = MC

@typing.final
class MCT(google.protobuf.message.Message):
    """Тип портфеля для счетов на американских рынках.
    Предоставляет доступ к биржам США: NYSE, NASDAQ, CBOE, CME, сделки с американскими акциями, фьючерсами и опционами.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___MCT = MCT

@typing.final
class FORTS(google.protobuf.message.Message):
    """Тип портфеля для торговли на срочном рынке Московской Биржи.
    Предназначен для работы с производными финансовыми инструментами: фьючерсами и опционами.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    AVAILABLE_CASH_FIELD_NUMBER: builtins.int
    MONEY_RESERVED_FIELD_NUMBER: builtins.int
    @property
    def available_cash(self) -> google.type.decimal_pb2.Decimal:
        """Сумма собственных денежных средств на счете, доступная для торговли. Включает маржинальные средства."""

    @property
    def money_reserved(self) -> google.type.decimal_pb2.Decimal:
        """Минимальная маржа (необходимая сумма обеспечения под открытые позици)"""

    def __init__(
        self,
        *,
        available_cash: google.type.decimal_pb2.Decimal | None = ...,
        money_reserved: google.type.decimal_pb2.Decimal | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["available_cash", b"available_cash", "money_reserved", b"money_reserved"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["available_cash", b"available_cash", "money_reserved", b"money_reserved"]) -> None: ...

global___FORTS = FORTS

@typing.final
class TradesRequest(google.protobuf.message.Message):
    """Запрос получения истории по сделкам"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ACCOUNT_ID_FIELD_NUMBER: builtins.int
    LIMIT_FIELD_NUMBER: builtins.int
    INTERVAL_FIELD_NUMBER: builtins.int
    account_id: builtins.str
    """Идентификатор аккаунта"""
    limit: builtins.int
    """Лимит количества сделок"""
    @property
    def interval(self) -> google.type.interval_pb2.Interval:
        """Начало и окончание запрашиваемого периода, Unix epoch time"""

    def __init__(
        self,
        *,
        account_id: builtins.str = ...,
        limit: builtins.int = ...,
        interval: google.type.interval_pb2.Interval | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["interval", b"interval"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["account_id", b"account_id", "interval", b"interval", "limit", b"limit"]) -> None: ...

global___TradesRequest = TradesRequest

@typing.final
class TradesResponse(google.protobuf.message.Message):
    """История по сделкам"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TRADES_FIELD_NUMBER: builtins.int
    @property
    def trades(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[FinamPy.FinamPy.grpc.trade_pb2.AccountTrade]:
        """Сделки по аккаунту"""

    def __init__(
        self,
        *,
        trades: collections.abc.Iterable[FinamPy.FinamPy.grpc.trade_pb2.AccountTrade] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["trades", b"trades"]) -> None: ...

global___TradesResponse = TradesResponse

@typing.final
class TransactionsRequest(google.protobuf.message.Message):
    """Запрос получения списка транзакций"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ACCOUNT_ID_FIELD_NUMBER: builtins.int
    LIMIT_FIELD_NUMBER: builtins.int
    INTERVAL_FIELD_NUMBER: builtins.int
    account_id: builtins.str
    """Идентификатор аккаунта"""
    limit: builtins.int
    """Лимит количества транзакций"""
    @property
    def interval(self) -> google.type.interval_pb2.Interval:
        """Начало и окончание запрашиваемого периода, Unix epoch time"""

    def __init__(
        self,
        *,
        account_id: builtins.str = ...,
        limit: builtins.int = ...,
        interval: google.type.interval_pb2.Interval | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["interval", b"interval"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["account_id", b"account_id", "interval", b"interval", "limit", b"limit"]) -> None: ...

global___TransactionsRequest = TransactionsRequest

@typing.final
class TransactionsResponse(google.protobuf.message.Message):
    """Список транзакций"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TRANSACTIONS_FIELD_NUMBER: builtins.int
    @property
    def transactions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Transaction]:
        """Транзакции по аккаунту"""

    def __init__(
        self,
        *,
        transactions: collections.abc.Iterable[global___Transaction] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["transactions", b"transactions"]) -> None: ...

global___TransactionsResponse = TransactionsResponse

@typing.final
class Position(google.protobuf.message.Message):
    """Информация о позиции"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SYMBOL_FIELD_NUMBER: builtins.int
    QUANTITY_FIELD_NUMBER: builtins.int
    AVERAGE_PRICE_FIELD_NUMBER: builtins.int
    CURRENT_PRICE_FIELD_NUMBER: builtins.int
    MAINTENANCE_MARGIN_FIELD_NUMBER: builtins.int
    DAILY_PNL_FIELD_NUMBER: builtins.int
    UNREALIZED_PNL_FIELD_NUMBER: builtins.int
    symbol: builtins.str
    """Символ инструмента"""
    @property
    def quantity(self) -> google.type.decimal_pb2.Decimal:
        """Количество в шт., значение со знаком определяющее (long-short)"""

    @property
    def average_price(self) -> google.type.decimal_pb2.Decimal:
        """Средняя цена. Не заполняется для FORTS позиций"""

    @property
    def current_price(self) -> google.type.decimal_pb2.Decimal:
        """Текущая цена"""

    @property
    def maintenance_margin(self) -> google.type.decimal_pb2.Decimal:
        """Поддерживающее гарантийное обеспечение. Заполняется только для FORTS позиций"""

    @property
    def daily_pnl(self) -> google.type.decimal_pb2.Decimal:
        """Прибыль или убыток за текущий день (PnL). Не заполняется для FORTS позиций"""

    @property
    def unrealized_pnl(self) -> google.type.decimal_pb2.Decimal:
        """Суммарная нереализованная прибыль или убыток (PnL) текущей позиции"""

    def __init__(
        self,
        *,
        symbol: builtins.str = ...,
        quantity: google.type.decimal_pb2.Decimal | None = ...,
        average_price: google.type.decimal_pb2.Decimal | None = ...,
        current_price: google.type.decimal_pb2.Decimal | None = ...,
        maintenance_margin: google.type.decimal_pb2.Decimal | None = ...,
        daily_pnl: google.type.decimal_pb2.Decimal | None = ...,
        unrealized_pnl: google.type.decimal_pb2.Decimal | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["average_price", b"average_price", "current_price", b"current_price", "daily_pnl", b"daily_pnl", "maintenance_margin", b"maintenance_margin", "quantity", b"quantity", "unrealized_pnl", b"unrealized_pnl"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["average_price", b"average_price", "current_price", b"current_price", "daily_pnl", b"daily_pnl", "maintenance_margin", b"maintenance_margin", "quantity", b"quantity", "symbol", b"symbol", "unrealized_pnl", b"unrealized_pnl"]) -> None: ...

global___Position = Position

@typing.final
class Transaction(google.protobuf.message.Message):
    """Информация о транзакции"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _TransactionCategory:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _TransactionCategoryEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[Transaction._TransactionCategory.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        OTHERS: Transaction._TransactionCategory.ValueType  # 0
        """Прочее"""
        DEPOSIT: Transaction._TransactionCategory.ValueType  # 1
        """Ввод ДС"""
        WITHDRAW: Transaction._TransactionCategory.ValueType  # 2
        """Вывод ДС"""
        INCOME: Transaction._TransactionCategory.ValueType  # 5
        """Доход"""
        COMMISSION: Transaction._TransactionCategory.ValueType  # 7
        """Комиссия"""
        TAX: Transaction._TransactionCategory.ValueType  # 8
        """Налог"""
        INHERITANCE: Transaction._TransactionCategory.ValueType  # 9
        """Наследство"""
        TRANSFER: Transaction._TransactionCategory.ValueType  # 11
        """Перевод ДС"""
        CONTRACT_TERMINATION: Transaction._TransactionCategory.ValueType  # 12
        """Расторжение договора"""
        OUTCOMES: Transaction._TransactionCategory.ValueType  # 13
        """Расходы"""
        FINE: Transaction._TransactionCategory.ValueType  # 15
        """Штраф"""
        LOAN: Transaction._TransactionCategory.ValueType  # 19
        """Займ"""

    class TransactionCategory(_TransactionCategory, metaclass=_TransactionCategoryEnumTypeWrapper):
        """Категории транзакции."""

    OTHERS: Transaction.TransactionCategory.ValueType  # 0
    """Прочее"""
    DEPOSIT: Transaction.TransactionCategory.ValueType  # 1
    """Ввод ДС"""
    WITHDRAW: Transaction.TransactionCategory.ValueType  # 2
    """Вывод ДС"""
    INCOME: Transaction.TransactionCategory.ValueType  # 5
    """Доход"""
    COMMISSION: Transaction.TransactionCategory.ValueType  # 7
    """Комиссия"""
    TAX: Transaction.TransactionCategory.ValueType  # 8
    """Налог"""
    INHERITANCE: Transaction.TransactionCategory.ValueType  # 9
    """Наследство"""
    TRANSFER: Transaction.TransactionCategory.ValueType  # 11
    """Перевод ДС"""
    CONTRACT_TERMINATION: Transaction.TransactionCategory.ValueType  # 12
    """Расторжение договора"""
    OUTCOMES: Transaction.TransactionCategory.ValueType  # 13
    """Расходы"""
    FINE: Transaction.TransactionCategory.ValueType  # 15
    """Штраф"""
    LOAN: Transaction.TransactionCategory.ValueType  # 19
    """Займ"""

    @typing.final
    class Trade(google.protobuf.message.Message):
        """Объект заполняется для торговых типов транзакций"""

        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        SIZE_FIELD_NUMBER: builtins.int
        PRICE_FIELD_NUMBER: builtins.int
        ACCRUED_INTEREST_FIELD_NUMBER: builtins.int
        @property
        def size(self) -> google.type.decimal_pb2.Decimal:
            """Количество в шт."""

        @property
        def price(self) -> google.type.decimal_pb2.Decimal:
            """Цена сделки за штуку. Цена исполнения/Размер премии по опциону. Это цена заключения, значение берется из сделки."""

        @property
        def accrued_interest(self) -> google.type.decimal_pb2.Decimal:
            """НКД. Заполнено если в сделке есть НКД"""

        def __init__(
            self,
            *,
            size: google.type.decimal_pb2.Decimal | None = ...,
            price: google.type.decimal_pb2.Decimal | None = ...,
            accrued_interest: google.type.decimal_pb2.Decimal | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["accrued_interest", b"accrued_interest", "price", b"price", "size", b"size"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["accrued_interest", b"accrued_interest", "price", b"price", "size", b"size"]) -> None: ...

    ID_FIELD_NUMBER: builtins.int
    CATEGORY_FIELD_NUMBER: builtins.int
    TIMESTAMP_FIELD_NUMBER: builtins.int
    SYMBOL_FIELD_NUMBER: builtins.int
    CHANGE_FIELD_NUMBER: builtins.int
    TRADE_FIELD_NUMBER: builtins.int
    TRANSACTION_CATEGORY_FIELD_NUMBER: builtins.int
    TRANSACTION_NAME_FIELD_NUMBER: builtins.int
    id: builtins.str
    """Идентификатор транзакции"""
    category: builtins.str
    """Тип транзакции из TransactionCategory"""
    symbol: builtins.str
    """Символ инструмента"""
    transaction_category: global___Transaction.TransactionCategory.ValueType
    """Категория транзакции из TransactionCategory."""
    transaction_name: builtins.str
    """Наименование транзакции"""
    @property
    def timestamp(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Метка времени"""

    @property
    def change(self) -> google.type.money_pb2.Money:
        """Изменение в деньгах"""

    @property
    def trade(self) -> global___Transaction.Trade:
        """Информация о сделке"""

    def __init__(
        self,
        *,
        id: builtins.str = ...,
        category: builtins.str = ...,
        timestamp: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        symbol: builtins.str = ...,
        change: google.type.money_pb2.Money | None = ...,
        trade: global___Transaction.Trade | None = ...,
        transaction_category: global___Transaction.TransactionCategory.ValueType = ...,
        transaction_name: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["change", b"change", "timestamp", b"timestamp", "trade", b"trade"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["category", b"category", "change", b"change", "id", b"id", "symbol", b"symbol", "timestamp", b"timestamp", "trade", b"trade", "transaction_category", b"transaction_category", "transaction_name", b"transaction_name"]) -> None: ...

global___Transaction = Transaction
