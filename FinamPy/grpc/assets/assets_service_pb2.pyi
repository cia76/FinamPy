"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import google.type.date_pb2
import google.type.decimal_pb2
import google.type.interval_pb2
import google.type.money_pb2
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class ExchangesRequest(google.protobuf.message.Message):
    """Запрос получения списка доступных бирж"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___ExchangesRequest = ExchangesRequest

@typing.final
class ExchangesResponse(google.protobuf.message.Message):
    """Список доступных бирж"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    EXCHANGES_FIELD_NUMBER: builtins.int
    @property
    def exchanges(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Exchange]:
        """Информация о бирже"""

    def __init__(
        self,
        *,
        exchanges: collections.abc.Iterable[global___Exchange] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["exchanges", b"exchanges"]) -> None: ...

global___ExchangesResponse = ExchangesResponse

@typing.final
class AssetsRequest(google.protobuf.message.Message):
    """Запрос получения списка доступных инструментов"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___AssetsRequest = AssetsRequest

@typing.final
class AssetsResponse(google.protobuf.message.Message):
    """Список доступных инструментов"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ASSETS_FIELD_NUMBER: builtins.int
    @property
    def assets(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Asset]:
        """Информация об инструменте"""

    def __init__(
        self,
        *,
        assets: collections.abc.Iterable[global___Asset] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["assets", b"assets"]) -> None: ...

global___AssetsResponse = AssetsResponse

@typing.final
class GetAssetRequest(google.protobuf.message.Message):
    """Запрос получения информации по конкретному инструменту"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SYMBOL_FIELD_NUMBER: builtins.int
    ACCOUNT_ID_FIELD_NUMBER: builtins.int
    symbol: builtins.str
    """Символ инструмента"""
    account_id: builtins.str
    """ID аккаунта для которого будет подбираться информация по инструменту"""
    def __init__(
        self,
        *,
        symbol: builtins.str = ...,
        account_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["account_id", b"account_id", "symbol", b"symbol"]) -> None: ...

global___GetAssetRequest = GetAssetRequest

@typing.final
class GetAssetResponse(google.protobuf.message.Message):
    """Список информации по конкретному инструменту"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    BOARD_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    TICKER_FIELD_NUMBER: builtins.int
    MIC_FIELD_NUMBER: builtins.int
    ISIN_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    DECIMALS_FIELD_NUMBER: builtins.int
    MIN_STEP_FIELD_NUMBER: builtins.int
    LOT_SIZE_FIELD_NUMBER: builtins.int
    EXPIRATION_DATE_FIELD_NUMBER: builtins.int
    board: builtins.str
    """Код режима торгов"""
    id: builtins.str
    """Идентификатор инструмента"""
    ticker: builtins.str
    """Тикер инструмента"""
    mic: builtins.str
    """mic идентификатор биржи"""
    isin: builtins.str
    """Isin идентификатор инструмента"""
    type: builtins.str
    """Тип инструмента"""
    name: builtins.str
    """Наименование инструмента"""
    decimals: builtins.int
    """Кол-во десятичных знаков в цене"""
    min_step: builtins.int
    """Минимальный шаг цены. Для расчета финального ценового шага: min_step/(10ˆdecimals)"""
    @property
    def lot_size(self) -> google.type.decimal_pb2.Decimal:
        """Кол-во штук в лоте"""

    @property
    def expiration_date(self) -> google.type.date_pb2.Date:
        """Дата экспирации фьючерса"""

    def __init__(
        self,
        *,
        board: builtins.str = ...,
        id: builtins.str = ...,
        ticker: builtins.str = ...,
        mic: builtins.str = ...,
        isin: builtins.str = ...,
        type: builtins.str = ...,
        name: builtins.str = ...,
        decimals: builtins.int = ...,
        min_step: builtins.int = ...,
        lot_size: google.type.decimal_pb2.Decimal | None = ...,
        expiration_date: google.type.date_pb2.Date | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["expiration_date", b"expiration_date", "lot_size", b"lot_size"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["board", b"board", "decimals", b"decimals", "expiration_date", b"expiration_date", "id", b"id", "isin", b"isin", "lot_size", b"lot_size", "mic", b"mic", "min_step", b"min_step", "name", b"name", "ticker", b"ticker", "type", b"type"]) -> None: ...

global___GetAssetResponse = GetAssetResponse

@typing.final
class GetAssetParamsRequest(google.protobuf.message.Message):
    """Запрос торговых параметров инструмента"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SYMBOL_FIELD_NUMBER: builtins.int
    ACCOUNT_ID_FIELD_NUMBER: builtins.int
    symbol: builtins.str
    """Символ инструмента"""
    account_id: builtins.str
    """ID аккаунта для которого будут подбираться торговые параметры"""
    def __init__(
        self,
        *,
        symbol: builtins.str = ...,
        account_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["account_id", b"account_id", "symbol", b"symbol"]) -> None: ...

global___GetAssetParamsRequest = GetAssetParamsRequest

@typing.final
class GetAssetParamsResponse(google.protobuf.message.Message):
    """Торговые параметры инструмента"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SYMBOL_FIELD_NUMBER: builtins.int
    ACCOUNT_ID_FIELD_NUMBER: builtins.int
    TRADEABLE_FIELD_NUMBER: builtins.int
    LONGABLE_FIELD_NUMBER: builtins.int
    SHORTABLE_FIELD_NUMBER: builtins.int
    LONG_RISK_RATE_FIELD_NUMBER: builtins.int
    LONG_COLLATERAL_FIELD_NUMBER: builtins.int
    SHORT_RISK_RATE_FIELD_NUMBER: builtins.int
    SHORT_COLLATERAL_FIELD_NUMBER: builtins.int
    LONG_INITIAL_MARGIN_FIELD_NUMBER: builtins.int
    SHORT_INITIAL_MARGIN_FIELD_NUMBER: builtins.int
    symbol: builtins.str
    """Символ инструмента"""
    account_id: builtins.str
    """ID аккаунта для которого подбираются торговые параметры"""
    tradeable: builtins.bool
    """Доступны ли торговые операции"""
    @property
    def longable(self) -> global___Longable:
        """Доступны ли операции в Лонг"""

    @property
    def shortable(self) -> global___Shortable:
        """Доступны ли операции в Шорт"""

    @property
    def long_risk_rate(self) -> google.type.decimal_pb2.Decimal:
        """Ставка риска для операции в Лонг"""

    @property
    def long_collateral(self) -> google.type.money_pb2.Money:
        """Сумма обеспечения для поддержания позиции Лонг"""

    @property
    def short_risk_rate(self) -> google.type.decimal_pb2.Decimal:
        """Ставка риска для операции в Шорт"""

    @property
    def short_collateral(self) -> google.type.money_pb2.Money:
        """Сумма обеспечения для поддержания позиции Шорт"""

    @property
    def long_initial_margin(self) -> google.type.money_pb2.Money:
        """Начальные требования, сколько на счету должно быть свободных денежных средств, чтобы открыть лонг позицию, для FORTS счетов равен биржевому ГО"""

    @property
    def short_initial_margin(self) -> google.type.money_pb2.Money:
        """Начальные требования, сколько на счету должно быть свободных денежных средств, чтобы открыть шорт позицию, для FORTS счетов равен биржевому ГО"""

    def __init__(
        self,
        *,
        symbol: builtins.str = ...,
        account_id: builtins.str = ...,
        tradeable: builtins.bool = ...,
        longable: global___Longable | None = ...,
        shortable: global___Shortable | None = ...,
        long_risk_rate: google.type.decimal_pb2.Decimal | None = ...,
        long_collateral: google.type.money_pb2.Money | None = ...,
        short_risk_rate: google.type.decimal_pb2.Decimal | None = ...,
        short_collateral: google.type.money_pb2.Money | None = ...,
        long_initial_margin: google.type.money_pb2.Money | None = ...,
        short_initial_margin: google.type.money_pb2.Money | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["long_collateral", b"long_collateral", "long_initial_margin", b"long_initial_margin", "long_risk_rate", b"long_risk_rate", "longable", b"longable", "short_collateral", b"short_collateral", "short_initial_margin", b"short_initial_margin", "short_risk_rate", b"short_risk_rate", "shortable", b"shortable"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["account_id", b"account_id", "long_collateral", b"long_collateral", "long_initial_margin", b"long_initial_margin", "long_risk_rate", b"long_risk_rate", "longable", b"longable", "short_collateral", b"short_collateral", "short_initial_margin", b"short_initial_margin", "short_risk_rate", b"short_risk_rate", "shortable", b"shortable", "symbol", b"symbol", "tradeable", b"tradeable"]) -> None: ...

global___GetAssetParamsResponse = GetAssetParamsResponse

@typing.final
class OptionsChainRequest(google.protobuf.message.Message):
    """Запрос получения цепочки опционов"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    UNDERLYING_SYMBOL_FIELD_NUMBER: builtins.int
    underlying_symbol: builtins.str
    """Символ базового актива опциона"""
    def __init__(
        self,
        *,
        underlying_symbol: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["underlying_symbol", b"underlying_symbol"]) -> None: ...

global___OptionsChainRequest = OptionsChainRequest

@typing.final
class OptionsChainResponse(google.protobuf.message.Message):
    """Информация о цепочке опционов"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SYMBOL_FIELD_NUMBER: builtins.int
    OPTIONS_FIELD_NUMBER: builtins.int
    symbol: builtins.str
    """Символ базового актива опциона"""
    @property
    def options(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Option]:
        """Информация об опционе"""

    def __init__(
        self,
        *,
        symbol: builtins.str = ...,
        options: collections.abc.Iterable[global___Option] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["options", b"options", "symbol", b"symbol"]) -> None: ...

global___OptionsChainResponse = OptionsChainResponse

@typing.final
class ScheduleRequest(google.protobuf.message.Message):
    """Запрос получения расписания инструмента"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SYMBOL_FIELD_NUMBER: builtins.int
    symbol: builtins.str
    """Символ инструмента"""
    def __init__(
        self,
        *,
        symbol: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["symbol", b"symbol"]) -> None: ...

global___ScheduleRequest = ScheduleRequest

@typing.final
class ScheduleResponse(google.protobuf.message.Message):
    """Расписание инструмента"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class Sessions(google.protobuf.message.Message):
        """Сессии"""

        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        TYPE_FIELD_NUMBER: builtins.int
        INTERVAL_FIELD_NUMBER: builtins.int
        type: builtins.str
        """Тип сессии"""
        @property
        def interval(self) -> google.type.interval_pb2.Interval:
            """Интервал сессии"""

        def __init__(
            self,
            *,
            type: builtins.str = ...,
            interval: google.type.interval_pb2.Interval | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["interval", b"interval"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["interval", b"interval", "type", b"type"]) -> None: ...

    SYMBOL_FIELD_NUMBER: builtins.int
    SESSIONS_FIELD_NUMBER: builtins.int
    symbol: builtins.str
    """Символ инструмента"""
    @property
    def sessions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ScheduleResponse.Sessions]:
        """Сессии инструмента"""

    def __init__(
        self,
        *,
        symbol: builtins.str = ...,
        sessions: collections.abc.Iterable[global___ScheduleResponse.Sessions] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["sessions", b"sessions", "symbol", b"symbol"]) -> None: ...

global___ScheduleResponse = ScheduleResponse

@typing.final
class ClockRequest(google.protobuf.message.Message):
    """Запрос получения времени на сервере"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___ClockRequest = ClockRequest

@typing.final
class ClockResponse(google.protobuf.message.Message):
    """Время на сервере"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TIMESTAMP_FIELD_NUMBER: builtins.int
    @property
    def timestamp(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Метка времени"""

    def __init__(
        self,
        *,
        timestamp: google.protobuf.timestamp_pb2.Timestamp | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["timestamp", b"timestamp"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["timestamp", b"timestamp"]) -> None: ...

global___ClockResponse = ClockResponse

@typing.final
class Exchange(google.protobuf.message.Message):
    """Информация о бирже"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    MIC_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    mic: builtins.str
    """Идентификатор биржи mic"""
    name: builtins.str
    """Наименование биржи"""
    def __init__(
        self,
        *,
        mic: builtins.str = ...,
        name: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["mic", b"mic", "name", b"name"]) -> None: ...

global___Exchange = Exchange

@typing.final
class Asset(google.protobuf.message.Message):
    """Информация об инструменте"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SYMBOL_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    TICKER_FIELD_NUMBER: builtins.int
    MIC_FIELD_NUMBER: builtins.int
    ISIN_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    symbol: builtins.str
    """Символ инструмента ticker@mic"""
    id: builtins.str
    """Идентификатор инструмента"""
    ticker: builtins.str
    """Тикер инструмента"""
    mic: builtins.str
    """mic идентификатор биржи"""
    isin: builtins.str
    """Isin идентификатор инструмента"""
    type: builtins.str
    """Тип инструмента"""
    name: builtins.str
    """Наименование инструмента"""
    def __init__(
        self,
        *,
        symbol: builtins.str = ...,
        id: builtins.str = ...,
        ticker: builtins.str = ...,
        mic: builtins.str = ...,
        isin: builtins.str = ...,
        type: builtins.str = ...,
        name: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["id", b"id", "isin", b"isin", "mic", b"mic", "name", b"name", "symbol", b"symbol", "ticker", b"ticker", "type", b"type"]) -> None: ...

global___Asset = Asset

@typing.final
class Option(google.protobuf.message.Message):
    """Информация об опционе"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _Type:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _TypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[Option._Type.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        TYPE_UNSPECIFIED: Option._Type.ValueType  # 0
        """Неопределенное значение"""
        TYPE_CALL: Option._Type.ValueType  # 1
        """Колл"""
        TYPE_PUT: Option._Type.ValueType  # 2
        """Пут"""

    class Type(_Type, metaclass=_TypeEnumTypeWrapper):
        """Тип опциона"""

    TYPE_UNSPECIFIED: Option.Type.ValueType  # 0
    """Неопределенное значение"""
    TYPE_CALL: Option.Type.ValueType  # 1
    """Колл"""
    TYPE_PUT: Option.Type.ValueType  # 2
    """Пут"""

    SYMBOL_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    CONTRACT_SIZE_FIELD_NUMBER: builtins.int
    TRADE_FIRST_DAY_FIELD_NUMBER: builtins.int
    TRADE_LAST_DAY_FIELD_NUMBER: builtins.int
    STRIKE_FIELD_NUMBER: builtins.int
    MULTIPLIER_FIELD_NUMBER: builtins.int
    EXPIRATION_FIRST_DAY_FIELD_NUMBER: builtins.int
    EXPIRATION_LAST_DAY_FIELD_NUMBER: builtins.int
    symbol: builtins.str
    """Символ инструмента"""
    type: global___Option.Type.ValueType
    """Тип инструмента"""
    @property
    def contract_size(self) -> google.type.decimal_pb2.Decimal:
        """Лот, количество базового актива в инструменте"""

    @property
    def trade_first_day(self) -> google.type.date_pb2.Date:
        """Дата старта торговли"""

    @property
    def trade_last_day(self) -> google.type.date_pb2.Date:
        """Дата окончания торговли"""

    @property
    def strike(self) -> google.type.decimal_pb2.Decimal:
        """Цена исполнения опциона"""

    @property
    def multiplier(self) -> google.type.decimal_pb2.Decimal:
        """Множитель опциона"""

    @property
    def expiration_first_day(self) -> google.type.date_pb2.Date:
        """Дата начала экспирации"""

    @property
    def expiration_last_day(self) -> google.type.date_pb2.Date:
        """Дата окончания экспирации"""

    def __init__(
        self,
        *,
        symbol: builtins.str = ...,
        type: global___Option.Type.ValueType = ...,
        contract_size: google.type.decimal_pb2.Decimal | None = ...,
        trade_first_day: google.type.date_pb2.Date | None = ...,
        trade_last_day: google.type.date_pb2.Date | None = ...,
        strike: google.type.decimal_pb2.Decimal | None = ...,
        multiplier: google.type.decimal_pb2.Decimal | None = ...,
        expiration_first_day: google.type.date_pb2.Date | None = ...,
        expiration_last_day: google.type.date_pb2.Date | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["contract_size", b"contract_size", "expiration_first_day", b"expiration_first_day", "expiration_last_day", b"expiration_last_day", "multiplier", b"multiplier", "strike", b"strike", "trade_first_day", b"trade_first_day", "trade_last_day", b"trade_last_day"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["contract_size", b"contract_size", "expiration_first_day", b"expiration_first_day", "expiration_last_day", b"expiration_last_day", "multiplier", b"multiplier", "strike", b"strike", "symbol", b"symbol", "trade_first_day", b"trade_first_day", "trade_last_day", b"trade_last_day", "type", b"type"]) -> None: ...

global___Option = Option

@typing.final
class Longable(google.protobuf.message.Message):
    """Доступны ли операции в Лонг"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _Status:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _StatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[Longable._Status.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        NOT_AVAILABLE: Longable._Status.ValueType  # 0
        """Не доступен"""
        AVAILABLE: Longable._Status.ValueType  # 1
        """Доступен"""
        ACCOUNT_NOT_APPROVED: Longable._Status.ValueType  # 2
        """Запрещено на уровне счета"""

    class Status(_Status, metaclass=_StatusEnumTypeWrapper):
        """Статус"""

    NOT_AVAILABLE: Longable.Status.ValueType  # 0
    """Не доступен"""
    AVAILABLE: Longable.Status.ValueType  # 1
    """Доступен"""
    ACCOUNT_NOT_APPROVED: Longable.Status.ValueType  # 2
    """Запрещено на уровне счета"""

    VALUE_FIELD_NUMBER: builtins.int
    HALTED_DAYS_FIELD_NUMBER: builtins.int
    value: global___Longable.Status.ValueType
    """Статус инструмента"""
    halted_days: builtins.int
    """Сколько дней действует запрет на операции в Лонг (если есть)"""
    def __init__(
        self,
        *,
        value: global___Longable.Status.ValueType = ...,
        halted_days: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["halted_days", b"halted_days", "value", b"value"]) -> None: ...

global___Longable = Longable

@typing.final
class Shortable(google.protobuf.message.Message):
    """Доступны ли операции в Шорт"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _Status:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _StatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[Shortable._Status.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        NOT_AVAILABLE: Shortable._Status.ValueType  # 0
        """Не доступен"""
        AVAILABLE: Shortable._Status.ValueType  # 1
        """Доступен"""
        HTB: Shortable._Status.ValueType  # 2
        """Признак того, что бумага Hard To Borrow (если есть)"""
        ACCOUNT_NOT_APPROVED: Shortable._Status.ValueType  # 3
        """Запрещено на уровне счета"""
        AVAILABLE_STRATEGY: Shortable._Status.ValueType  # 4
        """Разрешено в составе стратегии"""

    class Status(_Status, metaclass=_StatusEnumTypeWrapper):
        """Статус"""

    NOT_AVAILABLE: Shortable.Status.ValueType  # 0
    """Не доступен"""
    AVAILABLE: Shortable.Status.ValueType  # 1
    """Доступен"""
    HTB: Shortable.Status.ValueType  # 2
    """Признак того, что бумага Hard To Borrow (если есть)"""
    ACCOUNT_NOT_APPROVED: Shortable.Status.ValueType  # 3
    """Запрещено на уровне счета"""
    AVAILABLE_STRATEGY: Shortable.Status.ValueType  # 4
    """Разрешено в составе стратегии"""

    VALUE_FIELD_NUMBER: builtins.int
    HALTED_DAYS_FIELD_NUMBER: builtins.int
    value: global___Shortable.Status.ValueType
    """Статус инструмента"""
    halted_days: builtins.int
    """Сколько дней действует запрет на операции в Шорт (если есть)"""
    def __init__(
        self,
        *,
        value: global___Shortable.Status.ValueType = ...,
        halted_days: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["halted_days", b"halted_days", "value", b"value"]) -> None: ...

global___Shortable = Shortable
